Starting audit...
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\factory\StrategyFactory.java:4:18: Using the '.*' form of import should be avoided - strategies.*. [AvoidStarImport]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\factory\StrategyFactory.java:9:5: Class 'StrategyFactory' looks like designed for extension (can be subclassed), but the method 'createStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StrategyFactory' final or making the method 'createStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\factory\StrategyFactory.java:9:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\factory\StrategyFactory.java:10:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Distributor.java:11:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Distributor.java:109:50: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Distributor.java:109:80: '10' is a magic number. [MagicNumber]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Distributor.java:130:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Distributor.java:155:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Distributor.java:164:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Handler.java:3:20: Using the '.*' form of import should be avoided - mappingclass.*. [AvoidStarImport]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Handler.java:101:19: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Handler.java:115:21: '(' should be on the previous line. [MethodParamPad]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:31:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:35:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:39:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:43:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:47:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:51:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:55:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:59:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:63:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:67:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:71:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:75:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:79:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'getMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'getMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:83:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'setMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'setMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:87:5: Class 'Producer' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Producer' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:89:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:90:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:91:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:92:66: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:93:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:94:46: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:95:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\Producer.java:96:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\ProducerQuantity.java:7:5: Class 'ProducerQuantity' looks like designed for extension (can be subclassed), but the method 'getProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerQuantity' final or making the method 'getProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\ProducerQuantity.java:11:5: Class 'ProducerQuantity' looks like designed for extension (can be subclassed), but the method 'setProducer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerQuantity' final or making the method 'setProducer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\ProducerQuantity.java:15:5: Class 'ProducerQuantity' looks like designed for extension (can be subclassed), but the method 'getQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerQuantity' final or making the method 'getQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\ProducerQuantity.java:19:5: Class 'ProducerQuantity' looks like designed for extension (can be subclassed), but the method 'setQuantity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerQuantity' final or making the method 'setQuantity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:8:8: Unused import - java.util.Map. [UnusedImports]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:21:5: Class 'SubjectObservable' looks like designed for extension (can be subclassed), but the method 'changeProducerList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubjectObservable' final or making the method 'changeProducerList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:21:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:35:5: Class 'SubjectObservable' looks like designed for extension (can be subclassed), but the method 'getProducersChangedLastMonth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubjectObservable' final or making the method 'getProducersChangedLastMonth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:39:5: Class 'SubjectObservable' looks like designed for extension (can be subclassed), but the method 'setProducersChangedLastMonth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubjectObservable' final or making the method 'setProducersChangedLastMonth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:43:5: Class 'SubjectObservable' looks like designed for extension (can be subclassed), but the method 'getProducerList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubjectObservable' final or making the method 'getProducerList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:47:5: Class 'SubjectObservable' looks like designed for extension (can be subclassed), but the method 'populateMonth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubjectObservable' final or making the method 'populateMonth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\handler\SubjectObservable.java:47:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\Main.java:28:39: '39' is a magic number. [MagicNumber]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\Main.java:29:36: '60' is a magic number. [MagicNumber]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MappingClassOutput.java:67:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:9:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'getMonth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'getMonth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:13:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'setMonth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'setMonth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:17:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'getDistributorsIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'getDistributorsIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:21:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'setDistributorsIds' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'setDistributorsIds' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:25:5: Class 'MonthlyStat' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MonthlyStat' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:27:31: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:28:34: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\MonthlyStat.java:29:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:15:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:19:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:23:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:27:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setMaxDistributors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setMaxDistributors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:31:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:35:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setPriceKW' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setPriceKW' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:39:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:43:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setEnergyType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setEnergyType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:47:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:51:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setEnergyPerDistributor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setEnergyPerDistributor' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:55:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'getMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'getMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\mappingclass\ProducerOutput.java:59:5: Class 'ProducerOutput' looks like designed for extension (can be subclassed), but the method 'setMonthlyStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ProducerOutput' final or making the method 'setMonthlyStats' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:7:17: Using the '.*' form of import should be avoided - java.util.*. [AvoidStarImport]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:8:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:20:5: Class 'GreenStrategy' looks like designed for extension (can be subclassed), but the method 'doStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GreenStrategy' final or making the method 'doStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:21: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:21:98: 'producers' hides a field. [HiddenField]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:28: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\GreenStrategy.java:33: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\PriceStrategy.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\PriceStrategy.java:11:8: Unused import - java.util.stream.Collectors. [UnusedImports]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\PriceStrategy.java:24:5: Class 'PriceStrategy' looks like designed for extension (can be subclassed), but the method 'doStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PriceStrategy' final or making the method 'doStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\PriceStrategy.java:25: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\PriceStrategy.java:25:98: 'producers' hides a field. [HiddenField]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\QuantityStrategy.java:15:31: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\QuantityStrategy.java:15:32: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\QuantityStrategy.java:22:5: Class 'QuantityStrategy' looks like designed for extension (can be subclassed), but the method 'doStrategy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'QuantityStrategy' final or making the method 'doStrategy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\QuantityStrategy.java:23: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\QuantityStrategy.java:23:98: 'producers' hides a field. [HiddenField]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\QuantityStrategy.java:27:23: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\Strategy.java:10: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\Strategy.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\Strategy.java:10:39: Redundant 'final' modifier. [RedundantModifier]
[ERROR] D:\An 3\POO\Proiect POO\proiect-etapa2\.\src\strategies\Strategy.java:10:70: Redundant 'final' modifier. [RedundantModifier]
Audit done.
Checkstyle ends with 94 errors.
